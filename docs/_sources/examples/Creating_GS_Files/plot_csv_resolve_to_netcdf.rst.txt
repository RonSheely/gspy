
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/Creating_GS_Files/plot_csv_resolve_to_netcdf.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_Creating_GS_Files_plot_csv_resolve_to_netcdf.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Creating_GS_Files_plot_csv_resolve_to_netcdf.py:


CSV to NetCDF
-------------

This example demonstrates how to convert comma-separated values (CSV) data to the GS NetCDF format. Specifically this example includes:

1. Raw AEM data, from the Resolve system
2. Inverted resistivity models

Dataset Reference:
Burton, B.L., Minsley, B.J., Bloss, B.R., and Kress, W.H., 2021, Airborne electromagnetic, magnetic, and radiometric survey of the Mississippi Alluvial Plain, November 2018 - February 2019: U.S. Geological Survey data release, https://doi.org/10.5066/P9XBBBUU.

.. GENERATED FROM PYTHON SOURCE LINES 15-19

.. code-block:: default

    import matplotlib.pyplot as plt
    from os.path import join
    from gspy import Survey








.. GENERATED FROM PYTHON SOURCE LINES 20-22

Convert the CSV data to NetCDF
++++++++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 24-25

Initialize the Survey

.. GENERATED FROM PYTHON SOURCE LINES 25-35

.. code-block:: default


    # Path to example files
    data_path = '..//..//supplemental//region//MAP'

    # Survey metadata file
    metadata = join(data_path, "data//Resolve_survey_md.json")

    # Establish the Survey
    survey = Survey(metadata)








.. GENERATED FROM PYTHON SOURCE LINES 36-38

Import raw AEM data from CSV-format.
Define input data file and associated metadata file

.. GENERATED FROM PYTHON SOURCE LINES 38-44

.. code-block:: default

    d_data = join(data_path, 'data//Resolve.csv')
    d_supp = join(data_path, 'data//Resolve_data_md.json')

    # Add the raw AEM data as a tabular dataset
    survey.add_tabular(type='csv', data_filename=d_data, metadata_file=d_supp)








.. GENERATED FROM PYTHON SOURCE LINES 45-47

Import inverted AEM models from CSV-format.
Define input model file and associated metadata file

.. GENERATED FROM PYTHON SOURCE LINES 47-53

.. code-block:: default

    m_data = join(data_path, 'model//Resolve_model.csv')
    m_supp = join(data_path, 'model//Resolve_model_md.json')

    # Add the inverted AEM models as a tabular dataset
    survey.add_tabular(type='csv', data_filename=m_data, metadata_file=m_supp)








.. GENERATED FROM PYTHON SOURCE LINES 54-55

Save to NetCDF file

.. GENERATED FROM PYTHON SOURCE LINES 55-58

.. code-block:: default

    d_out = join(data_path, 'model//Resolve.nc')
    survey.write_netcdf(d_out)








.. GENERATED FROM PYTHON SOURCE LINES 59-60

Reading back in the GS NetCDF file

.. GENERATED FROM PYTHON SOURCE LINES 60-65

.. code-block:: default

    new_survey = Survey().read_netcdf(d_out)

    # Check the Survey information
    print(new_survey.xarray)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:                 ()
    Coordinates:
        spatial_ref             float64 ...
    Data variables:
        survey_information      float64 ...
        survey_units            float64 ...
        system_information      float64 ...
        flightline_information  float64 ...
        survey_equipment        float64 ...
    Attributes:
        title:        Example Resolve Airborne Electromagnetic (AEM) Raw Data
        institution:  USGS Geology, Geophysics, & Geochemistry Science Center
        source:       Comma-separated text file exported from Geosoft
        history:      <date and time when the data were produced and/or modified>
        references:   <data release reference>
        comment:      <additional details or ancillary information>
        content:      <summary list of file contents, e.g. raw data (/survey/tabu...
        conventions:  CF-1.8, GS-0.0.1
        created_by:   gspy==0.0.1




.. GENERATED FROM PYTHON SOURCE LINES 66-67

Plotting

.. GENERATED FROM PYTHON SOURCE LINES 67-79

.. code-block:: default


    # Make a scatter plot of a specific data variable, using GSPy's plotter 
    plt.figure()
    new_survey.tabular[0].gs_tabular.scatter('DTM', vmin=30, vmax=50)
    plt.show()

    # Make a scatter plot of a specific model variable, using GSPy's plotter 
    plt.figure()
    new_survey.tabular[1].gs_tabular.scatter('DOI_STANDARD')
    plt.show()

    # Check the model dataset
    print(new_survey.tabular[1])


.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/Creating_GS_Files/images/sphx_glr_plot_csv_resolve_to_netcdf_001.png
         :alt: plot csv resolve to netcdf
         :srcset: /examples/Creating_GS_Files/images/sphx_glr_plot_csv_resolve_to_netcdf_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/Creating_GS_Files/images/sphx_glr_plot_csv_resolve_to_netcdf_002.png
         :alt: plot csv resolve to netcdf
         :srcset: /examples/Creating_GS_Files/images/sphx_glr_plot_csv_resolve_to_netcdf_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:           (index: 9999, layer_depth: 30, nv: 2)
    Coordinates:
        spatial_ref       float64 ...
      * index             (index) int32 0 1 2 3 4 5 ... 9994 9995 9996 9997 9998
      * layer_depth       (layer_depth) float64 0.5 1.55 2.7 ... 109.2 119.7 132.5
      * nv                (nv) int64 0 1
        x                 (index) float64 5.36e+05 5.36e+05 ... 5.298e+05 5.297e+05
        y                 (index) float64 1.205e+06 1.205e+06 ... 1.197e+06
        z                 (index) float64 ...
    Data variables: (12/18)
        layer_depth_bnds  (layer_depth, nv) float64 ...
        LINE              (index) int64 ...
        LAT_WGS84_dd      (index) float64 ...
        LON_WGS84_dd      (index) float64 ...
        X_WGS84_Albers    (index) float64 ...
        Y_WGS84_Albers    (index) float64 ...
        ...                ...
        RESDATA           (index) float64 ...
        RESTOTAL          (index) float64 ...
        RHO_I             (index, layer_depth) float64 ...
        RHO_I_STD         (index, layer_depth) float64 ...
        DOI_CONSERVATIVE  (index) float64 ...
        DOI_STANDARD      (index) float64 66.2 78.2 78.2 78.6 ... 87.6 87.9 88.0
    Attributes:
        content:  inverted resistivity models
        comment:  This dataset includes inverted resistivity models derived from ...





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.784 seconds)


.. _sphx_glr_download_examples_Creating_GS_Files_plot_csv_resolve_to_netcdf.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_csv_resolve_to_netcdf.py <plot_csv_resolve_to_netcdf.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_csv_resolve_to_netcdf.ipynb <plot_csv_resolve_to_netcdf.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
