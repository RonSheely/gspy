
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/Interacting_With_GS_Files/plot_xarray_methods.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_Interacting_With_GS_Files_plot_xarray_methods.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Interacting_With_GS_Files_plot_xarray_methods.py:


Basic Class Structure
---------------------

The three primary classes (Survey, Tabular, and Raster) all contain data and metadata within `Xarray <https://docs.xarray.dev/en/stable/>`_ Datasets. This example demonstrates how to access the xarray object for each class, and methods for exploring the data and metadata.

This example uses ASEG-formatted raw AEM data from the Tempest system, and a 2-D GeoTiFF of magnetic data.

Dataset Reference:
Minsley, B.J., James, S.R., Bedrosian, P.A., Pace, M.D., Hoogenboom, B.E., and Burton, B.L., 2021, Airborne electromagnetic, magnetic, and radiometric survey of the Mississippi Alluvial Plain, November 2019 - March 2020: U.S. Geological Survey data release, https://doi.org/10.5066/P9E44CTQ.

.. GENERATED FROM PYTHON SOURCE LINES 14-19

.. code-block:: Python

    import matplotlib.pyplot as plt
    from os.path import join
    from gspy import Survey
    from pprint import pprint








.. GENERATED FROM PYTHON SOURCE LINES 20-21

First open the netcdf GS standard survey file.

.. GENERATED FROM PYTHON SOURCE LINES 21-24

.. code-block:: Python


    survey = Survey.open_netcdf("../../../../example_material/example_2/data/Tempest.nc")








.. GENERATED FROM PYTHON SOURCE LINES 25-27

Accessing the Xarray object
+++++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 29-30

Survey

.. GENERATED FROM PYTHON SOURCE LINES 30-35

.. code-block:: Python


    # The Survey's metadata is accessed through the xarray property
    print('Survey:')
    print(survey.xarray)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Survey:
    <xarray.Dataset> Size: 40B
    Dimensions:                 ()
    Coordinates:
        spatial_ref             float64 8B ...
    Data variables:
        survey_information      float64 8B ...
        survey_units            float64 8B ...
        flightline_information  float64 8B ...
        survey_equipment        float64 8B ...
    Attributes:
        title:        Example Tempest Airborne Electromagnetic (AEM) Dataset
        institution:  USGS Geology, Geophysics, & Geochemistry Science Center
        source:       Contractor provided ASEG-formatted data
        history:      <date and time when the data were produced and/or modified>
        references:   <data release reference>
        comment:      <additional details or ancillary information>
        content:      <summary list of file contents, e.g. raw data (/survey/tabu...
        conventions:  CF-1.8, GS-0.0
        created_by:   gspy==0.0.1




.. GENERATED FROM PYTHON SOURCE LINES 36-37

To look just at the attributes

.. GENERATED FROM PYTHON SOURCE LINES 37-40

.. code-block:: Python

    print('Survey Attributes:\n')
    pprint(survey.xarray.attrs)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Survey Attributes:

    {'comment': '<additional details or ancillary information>',
     'content': '<summary list of file contents, e.g. raw data '
                '(/survey/tabular/0), processed data (/survey/tabular/1)>',
     'conventions': 'CF-1.8, GS-0.0',
     'created_by': 'gspy==0.0.1',
     'history': '<date and time when the data were produced and/or modified>',
     'institution': 'USGS Geology, Geophysics, & Geochemistry Science Center',
     'references': '<data release reference>',
     'source': 'Contractor provided ASEG-formatted data',
     'title': 'Example Tempest Airborne Electromagnetic (AEM) Dataset'}




.. GENERATED FROM PYTHON SOURCE LINES 41-42

Or expand a specific variable

.. GENERATED FROM PYTHON SOURCE LINES 42-45

.. code-block:: Python

    print('Survey Information:\n')
    print(survey.xarray['survey_information'])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Survey Information:

    <xarray.DataArray 'survey_information' ()> Size: 8B
    [1 values with dtype=float64]
    Coordinates:
        spatial_ref  float64 8B ...
    Attributes:
        contractor_project_number:  603756FWA
        contractor:                 CGG Canada Services Ltd.
        client:                     U.S. Geological Survey
        survey_type:                electromagneticmagneticradiometric
        survey_area_name:           Mississippi Alluvial Plain (MAP)
        state:                      MOARTNMSLAILKY
        country:                    USA
        acquisition_start:          20191120
        acquisition_end:            20200307
        dataset_created:            20200420




.. GENERATED FROM PYTHON SOURCE LINES 46-48

Datasets
Get the list of datasets attached to the survey

.. GENERATED FROM PYTHON SOURCE LINES 48-50

.. code-block:: Python

    print(survey.datasets)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ['data', 'model', 'maps']




.. GENERATED FROM PYTHON SOURCE LINES 51-53

Datasets are attached to the Survey regardless of their format whether unstructured tabular data or
image-type raster data

.. GENERATED FROM PYTHON SOURCE LINES 53-62

.. code-block:: Python


    # Tabular
    print('Tabular:\n')
    print(survey['data'])

    # Raster
    print('\nRaster:\n')
    print(survey['maps'])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Tabular:

    <gspy.src.classes.data.GS_Data.GS_Data object at 0x112f44a70>

    Raster:

    <xarray.Dataset> Size: 6MB
    Dimensions:       (x: 599, nv: 2, y: 1212)
    Coordinates:
        spatial_ref   float64 8B ...
      * x             (x) float64 5kB 2.928e+05 2.934e+05 ... 6.51e+05 6.516e+05
      * nv            (nv) int64 16B 0 1
      * y             (y) float64 10kB 1.607e+06 1.606e+06 ... 8.808e+05 8.802e+05
    Data variables:
        x_bnds        (x, nv) float64 10kB ...
        y_bnds        (y, nv) float64 19kB ...
        magnetic_tmi  (y, x) float64 6MB ...
    Attributes:
        comment:  <additional details or ancillary information>
        content:  gridded magnetic map




.. GENERATED FROM PYTHON SOURCE LINES 63-64

and the second is located at index 1

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    print('Second Tabular Group:\n')
    print(survey['model'])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Second Tabular Group:

    <xarray.Dataset> Size: 31MB
    Dimensions:                  (index: 20701, layer_depth: 30, nv: 2,
                                  gate_times: 15)
    Coordinates:
        spatial_ref              float64 8B ...
      * index                    (index) int32 83kB 0 1 2 3 ... 20698 20699 20700
      * layer_depth              (layer_depth) float64 240B 1.5 4.65 ... 424.2 467.5
      * nv                       (nv) int64 16B 0 1
      * gate_times               (gate_times) float64 120B 1.085e-05 ... 0.01338
        x                        (index) float64 166kB ...
        y                        (index) float64 166kB ...
        z                        (index) float64 166kB ...
    Data variables: (12/49)
        layer_depth_bnds         (layer_depth, nv) float64 480B ...
        gate_times_bnds          (gate_times, nv) float64 240B ...
        uniqueid                 (index) int32 83kB ...
        survey                   (index) int32 83kB ...
        date                     (index) int32 83kB ...
        flight                   (index) int32 83kB ...
        ...                       ...
        phic                     (index) float64 166kB ...
        phit                     (index) float64 166kB ...
        phig                     (index) float64 166kB ...
        phis                     (index) float64 166kB ...
        lambda                   (index) float64 166kB ...
        iterations               (index) int32 83kB ...
    Attributes:
        content:  inverted resistivity models
        comment:  This dataset includes inverted resistivity models derived from ...




.. GENERATED FROM PYTHON SOURCE LINES 68-70

Coordinates, Dimensions, and Attributes
+++++++++++++++++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 72-73

All data variables must have dimensions, coordinate, and attributes

.. GENERATED FROM PYTHON SOURCE LINES 75-77

Dimensions
^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 79-81

Tabular data are typicaly 1-D or 2-D variables with the primary dimension being ``index``, which
corresponds to the rows of the input text file representing individual measurements.

.. GENERATED FROM PYTHON SOURCE LINES 81-83

.. code-block:: Python

    print(survey['model']['index'])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <xarray.DataArray 'index' (index: 20701)> Size: 83kB
    array([    0,     1,     2, ..., 20698, 20699, 20700], dtype=int32)
    Coordinates:
        spatial_ref  float64 8B ...
      * index        (index) int32 83kB 0 1 2 3 4 ... 20696 20697 20698 20699 20700
        x            (index) float64 166kB ...
        y            (index) float64 166kB ...
        z            (index) float64 166kB ...
    Attributes:
        standard_name:  index
        null_value:     not_defined
        units:          not_defined
        grid_mapping:   spatial_ref
        valid_range:    [    0 20700]
        long_name:      Index of individual data points




.. GENERATED FROM PYTHON SOURCE LINES 84-87

If a dimension is not discrete, meaning it represents ranges (such as depth layers),
then the bounds on each dimension value also need to be defined, and are linked
to the dimension through the "bounds" attribute.

.. GENERATED FROM PYTHON SOURCE LINES 87-91

.. code-block:: Python

    print('example non-discrete dimension:\n')
    print(survey['model']['gate_times'])
    print('\n\ncorresponding bounds on non-discrete dimension:\n')
    print(survey['model']['gate_times_bnds'])




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    example non-discrete dimension:

    <xarray.DataArray 'gate_times' (gate_times: 15)> Size: 120B
    array([1.085000e-05, 3.255000e-05, 5.426000e-05, 8.681000e-05, 1.410600e-04,
           2.278700e-04, 3.689300e-04, 5.859500e-04, 9.114800e-04, 1.410630e-03,
           2.191900e-03, 3.418070e-03, 5.338690e-03, 8.301020e-03, 1.337928e-02])
    Coordinates:
        spatial_ref  float64 8B ...
      * gate_times   (gate_times) float64 120B 1.085e-05 3.255e-05 ... 0.01338
    Attributes:
        standard_name:  gate_times
        null_value:     not_defined
        bounds:         gate_times_bnds
        units:          seconds
        grid_mapping:   spatial_ref
        valid_range:    [1.085000e-05 1.337928e-02]
        long_name:      receiver gate times


    corresponding bounds on non-discrete dimension:

    <xarray.DataArray 'gate_times_bnds' (gate_times: 15, nv: 2)> Size: 240B
    [30 values with dtype=float64]
    Coordinates:
        spatial_ref  float64 8B ...
      * nv           (nv) int64 16B 0 1
      * gate_times   (gate_times) float64 120B 1.085e-05 3.255e-05 ... 0.01338
    Attributes:
        standard_name:  gate_times_bounds
        null_value:     not_defined
        grid_mapping:   spatial_ref
        valid_range:    [5.430000e-06 1.666171e-02]
        long_name:      receiver gate times cell boundaries




.. GENERATED FROM PYTHON SOURCE LINES 92-94

Coordinates
^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 96-101

Coordinates define the spatial and temporal positioning of the data (X Y Z T).
Additionally, all dimensions are by default classified as a coordinate.
This means a dataset can have both dimensional and non-dimensional coordinates.
Dimensional coordinates are noted with a * (or bold text) in printed output of the xarray,
such as ``index``, ``gate_times``, ``nv`` in this example:

.. GENERATED FROM PYTHON SOURCE LINES 101-103

.. code-block:: Python

    print(survey['data'].dataset.coords)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Coordinates:
        spatial_ref  float64 8B ...
      * index        (index) int32 83kB 0 1 2 3 4 ... 20696 20697 20698 20699 20700
        x            (index) float64 166kB ...
        y            (index) float64 166kB ...
        z            (index) float64 166kB ...
      * gate_times   (gate_times) float64 120B 1.085e-05 3.255e-05 ... 0.01338




.. GENERATED FROM PYTHON SOURCE LINES 104-105

Tabular Coordinates

.. GENERATED FROM PYTHON SOURCE LINES 107-112

In Tabular data, coordinates are typically non-dimensional, since the primary dataset
dimension is ``index``. By default, we define the spatial coordinates, ``x`` and ``y``,
based on the longitude and latitude (or easting/northing) data variables. If relevant,
``z`` and ``t`` coordinate variables can also be defined, representing the vertical and
temporal coordinates of the data points.

.. GENERATED FROM PYTHON SOURCE LINES 114-115

Note: All coordinates must match the coordinate reference system defined in the Survey.

.. GENERATED FROM PYTHON SOURCE LINES 117-118

Raster Coordinates

.. GENERATED FROM PYTHON SOURCE LINES 120-123

Raster data are gridded, typically representing maps or multi-dimensional models.
Therefore, Raster data almost always have dimensional coordinates, i.e., the
data dimensions correspond directly to either spatial or temporal coordinates (``x``, ``y``, ``z``, ``t``).

.. GENERATED FROM PYTHON SOURCE LINES 123-125

.. code-block:: Python

    print(survey['maps'].coords)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Coordinates:
        spatial_ref  float64 8B ...
      * x            (x) float64 5kB 2.928e+05 2.934e+05 ... 6.51e+05 6.516e+05
      * nv           (nv) int64 16B 0 1
      * y            (y) float64 10kB 1.607e+06 1.606e+06 ... 8.808e+05 8.802e+05




.. GENERATED FROM PYTHON SOURCE LINES 126-127

The Spatial Reference Coordinate

.. GENERATED FROM PYTHON SOURCE LINES 129-132

the ``spatial_ref`` coordinate variable is a non-dimensional coordinate that
contains information on the coordinate reference system. For more information,
see :ref:`Coordinate Reference Systems <coordinate reference systems>`.

.. GENERATED FROM PYTHON SOURCE LINES 134-136

Attributes
^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 138-141

Both datasets and data variables have attributes (metadata fields). Certain
attributes are required, see our documentation on :ref:`the GS standard <GS Convention Requirements>`.
for more details.

.. GENERATED FROM PYTHON SOURCE LINES 143-144

Dataset attributes

.. GENERATED FROM PYTHON SOURCE LINES 146-150

Dataset attributes provide users a way to document and describe supplementary
information about a dataset group as a whole, such as model inversion parameters
or other processing descriptions. At a minimum, a ``content`` attribute should
contain a brief summary of the contents of the dataset.

.. GENERATED FROM PYTHON SOURCE LINES 150-152

.. code-block:: Python

    pprint(survey['model'].attrs)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    {'comment': 'This dataset includes inverted resistivity models derived from '
                'processed AEM data produced by USGS',
     'content': 'inverted resistivity models'}




.. GENERATED FROM PYTHON SOURCE LINES 153-154

Variable attributes

.. GENERATED FROM PYTHON SOURCE LINES 156-158

Each data variable must contain attributes detailing the metadata
of that individual variable. These follow the `Climate and Forecast (CF) metadata conventions <http://cfconventions.org/>`_.

.. GENERATED FROM PYTHON SOURCE LINES 158-158

.. code-block:: Python

    pprint(survey['model']['conductivity'].attrs)



.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    {'format': '30e15.6',
     'grid_mapping': 'spatial_ref',
     'long_name': 'Layer conductivity',
     'null_value': 'not_defined',
     'standard_name': 'conductivity',
     'units': 'S/m',
     'valid_range': array([1.e-04, 1.e+01])}





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.632 seconds)


.. _sphx_glr_download_examples_Interacting_With_GS_Files_plot_xarray_methods.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_xarray_methods.ipynb <plot_xarray_methods.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_xarray_methods.py <plot_xarray_methods.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_xarray_methods.zip <plot_xarray_methods.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
